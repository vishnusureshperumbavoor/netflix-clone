{"version":3,"sources":["constants.js","axios.js","Components/Banner/Banner.jsx","Components/Navbar/Navbar.js","Components/Rowpost/Rowpost.jsx","urls.js","App.js","index.js"],"names":["API_KEY","imageUrl","instance","axios","create","baseURL","Banner","useState","movie","setMovie","useEffect","get","then","response","console","log","data","results","sort","a","b","Math","random","style","backgroundImage","backdrop_path","className","title","overview","Navbar","src","alt","Rowpost","props","movies","setMovies","urlId","setUrlId","url","catch","err","map","obj","onClick","id","length","isSmall","videoId","key","opts","height","width","playerVars","autoplay","originals","action","documentaries","comedy","horror","romance","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d92991f5.chunk.js","sourcesContent":["export const baseUrl = 'https://api.themoviedb.org/3';\nexport const API_KEY = '0e4331e5a977285e75144b131e99d625';\nexport const imageUrl = 'https://image.tmdb.org/t/p/original';","import axios from 'axios'\nimport {baseUrl} from './constants'\nconst instance = axios.create({\n    baseURL: baseUrl\n});\nexport default instance","import React, {useEffect, useState} from 'react'\nimport {API_KEY,imageUrl} from '../../constants'\nimport axios from '../../axios'\nimport './Banner.css'\nfunction Banner() {\n    const [movie, setMovie] = useState()\n    useEffect(() => {\n        axios.get(`trending/all/week?api_key=${API_KEY}&language=en-US`).then((response)=>{\n            console.log(response.data.results[0]);\n            setMovie(response.data.results.sort(function(a,b){return 0.5 - Math.random()})[0])\n        })\n    }, [])\n    return (\n        <div style={{backgroundImage : `url(${ movie ? imageUrl+movie.backdrop_path : \"\" })`}} className=\"banner\">\n            <div className=\"content\">\n                <h1 className='title'>{movie ? movie.title : \"\"}</h1>\n                <div className=\"banner_button\">\n                    <button className=\"button\">Play</button>\n                    <button className=\"button\">My list</button>\n                </div>\n                <h1 className=\"description\">{movie ? movie.overview : \"\"}</h1>\n            </div>\n            <div className=\"fade_bottom\">\n\n            </div>\n        </div>\n    )\n}\n\nexport default Banner\n","import React from 'react'\nimport \"./Navbar.css\"\n\nfunction Navbar() {\n    return (\n        <div className=\"navbar\">\n            <img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\" alt=\"\" />\n            <img className=\"avatar\" src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\" alt=\"\" />\n        </div>\n    )\n}\n\nexport default Navbar\n","import React, { useEffect, useState } from 'react'\nimport './Rowpost.css'\nimport {imageUrl,API_KEY} from '../../constants'\nimport axios from '../../axios'\nimport Youtube from 'react-youtube'\nfunction Rowpost(props) {\n    const [movies, setMovies] = useState([])\n    const [urlId,setUrlId] = useState('')\n    useEffect(() => {\n        axios.get(props.url).then((response)=>{\n            console.log(response.data);\n            setMovies(response.data.results)\n        }).catch(err=>{\n            // alert('network error')\n        })\n    }, [])\n    const opts = {\n        height: '390',\n        width: '100%',\n        playerVars: {\n          autoplay: 0,\n        },\n    };\n    const handleMovie = (id)=>{\n          console.log(id);\n          axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response=>{\n              if(response.data.results.length!==0){\n                  setUrlId(response.data.results[0])\n              }else{\n                  console.log(\"Array empty\");\n              }\n          })\n      }\n    return (\n        <div className=\"row\">\n            <h1>{props.title}</h1>\n            <div className=\"posters\">\n                {movies.map((obj)=>\n                    <img onClick={()=>handleMovie(obj.id)} className={props.isSmall ? 'smallPoster' : 'poster'} \n                    src={`${imageUrl+obj.backdrop_path}`} alt=\"\" />                \n                )}\n            </div>\n            { urlId && <Youtube videoId={urlId.key} opts={opts}  /> }\n\n            \n        </div>\n    )\n}\n\nexport default Rowpost\n","import {API_KEY} from './constants'\nexport const originals = `discover/tv?api_key=${API_KEY}&with_networks=213`\nexport const action = `discover/movie?api_key=${API_KEY}&with_genres=28`\nexport const documentaries = `discover/movie?api_key=${API_KEY}&with_genres=99`\nexport const comedy = `discover/movie?api_key=${API_KEY}&with_genres=35`\nexport const horror = `discover/movie?api_key=${API_KEY}&with_genres=27`\nexport const romance = `discover/movie?api_key=${API_KEY}&with_genres=10749`\n","import React from 'react';\nimport './App.css';\nimport Banner from './Components/Banner/Banner';\nimport Navbar from './Components/Navbar/Navbar';\nimport Rowpost from './Components/Rowpost/Rowpost';\nimport {action, documentaries, originals, romance, comedy, horror} from './urls'\nfunction App() { \n  return(\n    <div className=\"App\">\n      <Navbar/>\n      <Banner/>\n      <Rowpost title=\"netflix originals\" url={originals} />\n      <Rowpost title=\"action movies\" url={action} isSmall />\n      <Rowpost title=\"Documentaries\" url={documentaries} isSmall />\n      <Rowpost title=\"Comedy\" url={comedy} isSmall />\n      <Rowpost title=\"Horror\" url={horror} isSmall />\n      <Rowpost title=\"Romance\" url={romance} isSmall />\n    </div>\n  )  \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}